    { //////// Begin generated code: Prediction model      ////////
        double subx0 = I*dt/_params.Q;
        double subx1 = exp(-dt/_params.RC1);
        double subx2 = I*(1 - subx1);
        double subx3 = exp(-dt/_params.RC2);
        double subx4 = 1 - subx3;
        double subx5 = I*subx4;
        double subx6 = ((_params.I_sigma)*(_params.I_sigma));
        double subx7 = P(0,1) - P(1,1)*subx0;
        double subx8 = P(0,5) - P(1,5)*subx0;
        double subx9 = subx6*x(STATE_IDX_R1)*(1 - subx1);
        double subx10 = dt*x(STATE_IDX_SOH_INV)/_params.Q;
        double subx11 = P(0,6) - P(1,6)*subx0;
        double subx12 = P(1,2)*subx1 + P(1,5)*subx2;
        double subx13 = P(1,3)*subx3 + P(1,6)*subx5;
        double subx14 = P(2,5)*subx1 + P(5,5)*subx2;
        double subx15 = P(2,6)*subx1 + P(5,6)*subx2;
        double subx16 = P(3,5)*subx3 + P(5,6)*subx5;
        double subx17 = P(3,6)*subx3 + P(6,6)*subx5;

        x_n(0,0) = -subx0*x(STATE_IDX_SOH_INV) + x(STATE_IDX_SOC);
        x_n(1,0) = x(STATE_IDX_SOH_INV);
        x_n(2,0) = subx1*x(STATE_IDX_V1) + subx2*x(STATE_IDX_R1);
        x_n(3,0) = subx3*x(STATE_IDX_V2) + subx5*x(STATE_IDX_R2);
        x_n(4,0) = x(STATE_IDX_R0);
        x_n(5,0) = x(STATE_IDX_R1);
        x_n(6,0) = x(STATE_IDX_R2);

        P_n(0,0) = P(0,0) - P(0,1)*subx0 - subx0*subx7 + ((dt)*(dt))*subx6*((x(STATE_IDX_SOH_INV))*(x(STATE_IDX_SOH_INV)))/((_params.Q)*(_params.Q));
        P_n(0,1) = subx7;
        P_n(0,2) = subx1*(P(0,2) - P(1,2)*subx0) - subx10*subx9 + subx2*subx8;
        P_n(0,3) = -subx10*subx4*subx6*x(STATE_IDX_R2) + subx11*subx5 + subx3*(P(0,3) - P(1,3)*subx0);
        P_n(0,4) = P(0,4) - P(1,4)*subx0;
        P_n(0,5) = subx8;
        P_n(0,6) = subx11;
        P_n(1,0) = subx7;
        P_n(1,1) = P(1,1);
        P_n(1,2) = subx12;
        P_n(1,3) = subx13;
        P_n(1,4) = P(1,4);
        P_n(1,5) = P(1,5);
        P_n(1,6) = P(1,6);
        P_n(2,0) = P(0,2)*subx1 + P(0,5)*subx2 - subx0*subx12 - subx10*subx9;
        P_n(2,1) = subx12;
        P_n(2,2) = subx1*(P(2,2)*subx1 + P(2,5)*subx2) + subx14*subx2 + subx6*((x(STATE_IDX_R1))*(x(STATE_IDX_R1)))*((1 - subx1)*(1 - subx1));
        P_n(2,3) = subx15*subx5 + subx3*(P(2,3)*subx1 + P(3,5)*subx2) + subx4*subx9*x(STATE_IDX_R2);
        P_n(2,4) = P(2,4)*subx1 + P(4,5)*subx2;
        P_n(2,5) = subx14;
        P_n(2,6) = subx15;
        P_n(3,0) = P(0,3)*subx3 + P(0,6)*subx5 - subx0*subx13 - subx10*subx4*subx6*x(STATE_IDX_R2);
        P_n(3,1) = subx13;
        P_n(3,2) = subx1*(P(2,3)*subx3 + P(2,6)*subx5) + subx16*subx2 + subx4*subx9*x(STATE_IDX_R2);
        P_n(3,3) = subx17*subx5 + subx3*(P(3,3)*subx3 + P(3,6)*subx5) + ((subx4)*(subx4))*subx6*((x(STATE_IDX_R2))*(x(STATE_IDX_R2)));
        P_n(3,4) = P(3,4)*subx3 + P(4,6)*subx5;
        P_n(3,5) = subx16;
        P_n(3,6) = subx17;
        P_n(4,0) = P(0,4) - P(1,4)*subx0;
        P_n(4,1) = P(1,4);
        P_n(4,2) = P(2,4)*subx1 + P(4,5)*subx2;
        P_n(4,3) = P(3,4)*subx3 + P(4,6)*subx5;
        P_n(4,4) = P(4,4);
        P_n(4,5) = P(4,5);
        P_n(4,6) = P(4,6);
        P_n(5,0) = subx8;
        P_n(5,1) = P(1,5);
        P_n(5,2) = subx14;
        P_n(5,3) = subx16;
        P_n(5,4) = P(4,5);
        P_n(5,5) = P(5,5);
        P_n(5,6) = P(5,6);
        P_n(6,0) = subx11;
        P_n(6,1) = P(1,6);
        P_n(6,2) = subx15;
        P_n(6,3) = subx17;
        P_n(6,4) = P(4,6);
        P_n(6,5) = P(5,6);
        P_n(6,6) = P(6,6);
    } //////// End generated code: Prediction model        ////////
